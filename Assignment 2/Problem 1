/*
	Luke Kim - 1478875
	COSC 3320: Algorithms and Data Structures â€“ Assignment 2 - Problem 1
	Due: April 1, 2020
*/

#include <iostream>
#include <string>
#include <stdlib.h>
#include <ctime>
using namespace std;

// Generates and returns a number
int generateNumbers() {
    int randNumber = rand() % 100;
    
    return randNumber;
}

int main() {

    srand(time(nullptr));

    // Array containing required sizes
    int sizes[10] = {128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536};
    clock_t start, stop;
    double time = 0;

    for (int a = 0; a < 10; a++) {
        int size = sizes[a];

        int** A = new int*[size];
        int** B = new int*[size];
        int** C = new int*[size];

        for (int z = 0; z < size; z++) {
            A[z] = new int[sizes[a]];
            B[z] = new int[sizes[a]];
            C[z] = new int[sizes[a]];
        }

        // Filling the 2D arrays
        for (int b = 0; b < size; b++) {
            for (int c = 0; c < size; c++) {
                A[b][c] = generateNumbers();
                B[b][c] = generateNumbers();     
            }
        }

        start = clock();
        for (int i = 1; i < size; i++) {
            for (int j = 1; j < size; j++) {
                C[i][j] = A[i][j] + B[i][j];
            }
        }

        stop = clock();

        time = double(stop - start) / double(CLOCKS_PER_SEC);
        cout << "Time for Version 1 and size " << size << " is " << time << " seconds" << endl;

        start = clock();

        for (int j = 1; j < size; j++) {
            for (int i = 1; i < size; i++) {
                C[i][j] = A[i][j] + B[i][j];
            }
        }
        stop = clock();

        time = double(stop - start) / double(CLOCKS_PER_SEC);
        cout << "Time for Version 2 and size: " << size << " is " << time << " seconds" << endl;
    }

    return 0;
}
